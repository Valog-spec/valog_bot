from typing import Optional, Sequence

from aiogram.filters.callback_data import CallbackData
from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardMarkup,
)
from aiogram.utils.keyboard import InlineKeyboardBuilder


class OrderCallback(CallbackData, prefix="order"):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback-–¥–µ–π—Å—Ç–≤–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∑–∞–∫–∞–∑–∞–º–∏

    Attributes:
       action (str): –î–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å –∑–∞–∫–∞–∑–æ–º
       order_id (int): –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞
       status (Optional[str]): –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞)
    """

    action: str
    order_id: int
    status: Optional[str] = None


class AdminAction(CallbackData, prefix="admin"):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback-–¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

    –ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç CallbackData –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å 'admin' –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏

    Attributes:
        action (str): –î–µ–π—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    """

    action: str
    user_id: Optional[int] = None


def get_admin_keyboard() -> InlineKeyboardMarkup | ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

    Returns:
       InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    keyboard = InlineKeyboardBuilder()
    keyboard.add(
        InlineKeyboardButton(
            text="C–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤",
            callback_data=AdminAction(action="list_orders").pack(),
        )
    )
    keyboard.add(
        InlineKeyboardButton(
            text="–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
            callback_data=AdminAction(action="add_product").pack(),
        )
    )
    keyboard.add(
        InlineKeyboardButton(
            text="–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç", callback_data=AdminAction(action="catalog").pack()
        )
    )
    keyboard.add(
        InlineKeyboardButton(
            text="–î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–Ω–Ω–µ—Ä",
            callback_data=AdminAction(action="banner").pack(),
        )
    )
    keyboard.add(
        InlineKeyboardButton(
            text="–í–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            callback_data=AdminAction(action="support").pack(),
        )
    )

    return keyboard.adjust(2).as_markup()


def get_orders_keyboard(orders: Sequence) -> InlineKeyboardMarkup | ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

    Args:
        orders (Sequence): –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–æ–≤ (–æ–±—ã—á–Ω–æ —Å–ø–∏—Å–æ–∫)

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    keyboard = InlineKeyboardBuilder()
    for order in orders:
        keyboard.add(
            InlineKeyboardButton(
                text=f"–ó–∞–∫–∞–∑ #{order.id} ({order.status})",
                callback_data=OrderCallback(action="view", order_id=order.id).pack(),
            )
        )
    keyboard.row(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥", callback_data=AdminAction(action="main").pack()
        )
    )

    return keyboard.adjust(2).as_markup()


def get_order_actions_keyboard(
    order_id: int,
) -> InlineKeyboardMarkup | ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞

    Args:
        order_id (int): ID –∑–∞–∫–∞–∑–∞ –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–æ–∑–¥–∞—é—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏—è

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    keyboard = InlineKeyboardBuilder()
    keyboard.add(
        InlineKeyboardButton(
            text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
            callback_data=OrderCallback(action="edit_status", order_id=order_id).pack(),
        )
    )
    keyboard.add(
        InlineKeyboardButton(
            text="‚ùå –£–¥–∞–ª–∏—Ç—å",
            callback_data=OrderCallback(action="delete", order_id=order_id).pack(),
        )
    )
    keyboard.row(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥", callback_data=AdminAction(action="list_orders").pack()
        )
    )
    return keyboard.adjust(2).as_markup()


def get_statuses_keyboard(order_id: int) -> InlineKeyboardMarkup | ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞

    Args:
        order_id (int): ID –∑–∞–∫–∞–∑–∞ –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –º–µ–Ω—è–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    keyboard = InlineKeyboardBuilder()

    keyboard.add(
        InlineKeyboardButton(
            text="üîÑ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ",
            callback_data=OrderCallback(
                action="edit_status", order_id=order_id, status="processing"
            ).pack(),
        )
    )
    keyboard.add(
        InlineKeyboardButton(
            text="üöö –û—Ç–ø—Ä–∞–≤–ª–µ–Ω",
            callback_data=OrderCallback(
                action="edit_status", order_id=order_id, status="shipped"
            ).pack(),
        )
    )
    keyboard.add(
        InlineKeyboardButton(
            text="‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω",
            callback_data=OrderCallback(
                action="edit_status", order_id=order_id, status="delivered"
            ).pack(),
        )
    )
    keyboard.row(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥", callback_data=AdminAction(action="list_orders").pack()
        )
    )

    return keyboard.adjust(2).as_markup()


def get_confirm_delete_keyboard(
    order_id: int,
) -> InlineKeyboardMarkup | ReplyKeyboardMarkup:
    """
     –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞

    Args:
        order_id (int): ID –∑–∞–∫–∞–∑–∞ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    keyboard = InlineKeyboardBuilder()
    keyboard.add(
        InlineKeyboardButton(
            text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å",
            callback_data=OrderCallback(
                action="confirm_delete", order_id=order_id
            ).pack(),
        )
    )

    keyboard.add(
        InlineKeyboardButton(
            text="‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞",
            callback_data=AdminAction(action="list_orders").pack(),
        )
    )
    return keyboard.adjust(2).as_markup()


def get_support_keyboard(users):
    keyboard = InlineKeyboardBuilder()
    for i in users:
        keyboard.add(
            InlineKeyboardButton(
                text=f"–í–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {i}",
                callback_data=AdminAction(action="view_questions", user_id=i).pack(),
            )
        )
    keyboard.add(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥", callback_data=AdminAction(action="main").pack()
        )
    )

    return keyboard.adjust(1, 1).as_markup()


def get_support_keyboard_by_user_support(user_support):
    keyboard = InlineKeyboardBuilder()
    for i in user_support:
        print(i.content)
        keyboard.add(
            InlineKeyboardButton(
                text=f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {i.content}\n–ù–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {i.phone}",
                callback_data=AdminAction(
                    action="view_questions", user_id=i.user_id
                ).pack(),
            )
        )

    keyboard.add(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥", callback_data=AdminAction(action="main").pack()
        )
    )
    keyboard.add(
        InlineKeyboardButton(
            text="–£–¥–∞–ª–∏—Ç—å",
            callback_data=AdminAction(
                action="view_questions", user_id=i.user_id
            ).pack(),
        )
    )

    return keyboard.adjust(1, 2).as_markup()
